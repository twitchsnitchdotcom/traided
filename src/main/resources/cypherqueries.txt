
SUBMISSION PERIOD:  GENERAL:

https://api.usaspending.gov/api/v2/references/submission_periods/

       {
            "period_start_date": "2022-03-01T00:00:00Z",
            "period_end_date": "2022-03-31T00:00:00Z",
            "submission_start_date": "2022-04-19T00:00:00Z",
            "submission_due_date": "2022-04-29T00:00:00Z",
            "certification_due_date": "2022-05-17T00:00:00Z",
            "submission_reveal_date": "2022-04-29T01:41:09.474018Z",
            "submission_fiscal_year": 2022,
            "submission_fiscal_quarter": 2,
            "submission_fiscal_month": 6,
            "is_quarter": false
        }

CALL apoc.load.jsonParams("https://api.usaspending.gov/api/v2/references/submission_periods/",{Accept: "application/json"}, null) YIELD value
UNWIND  value.available_periods as period
CREATE (sp:SubmissionPeriod)
SET sp.period_start_date = datetime(period.period_start_date),
sp.period_end_date = datetime(period.period_end_date),
sp.submission_start_date = datetime(period.submission_start_date),
sp.submission_due_date = datetime(period.submission_due_date),
sp.certification_due_date = datetime(period.certification_due_date),
sp.submission_reveal_date = datetime(period.submission_reveal_date),
sp.submission_fiscal_year = period.submission_fiscal_year,
sp.submission_fiscal_quarter = period.submission_fiscal_quarter,
sp.submission_fiscal_month = period.submission_fiscal_month,
sp.is_quarter = period.is_quarter


-----------------------------------------------------------------------------------------------------------
SUBAGENCY COUNT:

https://api.usaspending.gov/api/v2/agency/012/sub_agency/count/

{
    "toptier_code": "012",
    "fiscal_year": 2022,
    "sub_agency_count": 20,
    "office_count": 346,
    "messages": []
}

CALL apoc.periodic.iterate(
  'MATCH (a:TopTierAgency) RETURN a',
  'WITH a, "https://api.usaspending.gov/api/v2/agency/" + a.toptier_code +  "/sub_agency/count/"  as url
  CALL apoc.load.jsonParams(url,{Accept: "application/json"}, null) YIELD value
  WITH a, value
  SET a.sub_agency_count = value.sub_agency_count,
  a.office_count = value.office_count',
{batchSize:1, parallel:true})



-----------------------------------------------------------------------------------------------------------
SUB AGENCY SET:

https://api.usaspending.gov/api/v2/agency/012/sub_agency/?limit=100

    "results": [
        {
            "name": "Food and Nutrition Service",
            "abbreviation": "FNS",
            "total_obligations": 104819314298.18,
            "transaction_count": 5990,
            "new_award_count": 1606,
            "children": [
                {
                    "name": "SUPPLEMENTAL NUTRITIONAL ASST PROG",
                    "code": "1234HK",
                    "total_obligations": 82600830795.57,
                    "transaction_count": 1830,
                    "new_award_count": 536
                }
            ]
        }

//TODO it has issues with abbreviation being null

CALL apoc.periodic.iterate(
  'MATCH (a:TopTierAgency) WHERE NOT a.sub_agency_count=0 RETURN a',
  'WITH a, "https://api.usaspending.gov/api/v2/agency/" + a.toptier_code +  "/sub_agency/?limit=100"  as url
  CALL apoc.load.jsonParams(url,{Accept: "application/json"}, null) YIELD value
  WITH a, value
    FOREACH (sub in value.results |
            MERGE (s:SubAgency{abbreviation:sub.abbreviation})
            SET s.name = sub.name,
            s.total_obligations = sub.total_obligations,
            s.transaction_count = sub.transaction_count,
            s.new_award_count = sub.new_award_count
            MERGE (a)-[:HAS_SUBAGENCY]->(s))',
{batchSize:1, parallel:true})


-----------------------------------------------------------------------------------------------------------

//todo some form of merging between sub components and sub agencies

AGENCY SUB COMPONENT SET:

https://api.usaspending.gov/api/v2/agency/012/sub_components/?limit=100

"toptier_code": "012",
    "fiscal_year": 2022,
    "results": [
        {
            "name": "Food and Nutrition Service",
            "id": "food-and-nutrition-service",
            "total_obligations": 100037340878.05,
            "total_outlays": 102900958070.34,
            "total_budgetary_resources": 218353876771.34
        },


CALL apoc.periodic.iterate(
  'MATCH (a:TopTierAgency) RETURN a',
  'WITH a, "https://api.usaspending.gov/api/v2/agency/" + a.toptier_code +  "/sub_components/?limit=100"  as url
  CALL apoc.load.jsonParams(url,{Accept: "application/json"}, null) YIELD value
  WITH a, value
    FOREACH (sub in value.results |
            MERGE (s:SubComponent{id:sub.id})
            SET s.name = sub.name,
            s.total_obligations = sub.total_obligations,
            s.total_outlays = sub.total_outlays,
            s.total_budgetary_resources = sub.total_budgetary_resources
            MERGE (a)-[:HAS_SUBCOMPONENT]->(s))
  ',
{batchSize:1, parallel:true})

-----------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------
